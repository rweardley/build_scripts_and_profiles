PS1="\e[1;31m(Cardinal)\e[0m "$PS1

# [REQUIRED] you must set the location of the root directory of the NekRS install;
# this will be the 'install' directory at the top level of the Cardinal repository.
export NEKRS_HOME=$HOME/projects/cardinal/install

# export ENABLE_NEK=false ## uncomment this to build Cardinal without NekRS
export ENABLE_OPENMC=false ## uncomment this to build Cardinal without OpenMC
# export ENABLE_DAGMC=yes ## uncomment this to get DAGMC support

# [OPTIONAL] it's a good idea to explicitly note that you are using MPI compiler wrappers
export CC=mpicc
export CXX=mpicxx
export FC=mpif90

# [OPTIONAL] add NekRS to path for standalone use
export PATH=$NEKRS_HOME/bin:$PATH

# [OPTIONAL] if running with OpenMC, you will need cross section data at runtime;
# you will need to set this variable to point to a 'cross_sections.xml' file.
# export OPENMC_CROSS_SECTIONS=${HOME}/cross_sections/endfb71_hdf5/cross_sections.xml

# [OPTIONAL] if using any version of HDF5 except the default downloaded by PETSC,
# specify HDF5 top level directory here
# HDF5_ROOT=

# [OPTIONAL] libMesh optimization methods;
# state multiple to get multiple libMesh  libraries with different settings (1 for each method)
#export METHODS='opt oprof dbg'
export METHODS='opt'

# [OPTIONAL] Cardinal optimization method;
# MOOSE currently only supports building 1 Cardinal executable at a time
# Run make multiple times with different METHOD values to get multiple Cardinal executables
export METHOD='opt'

# [OPTIONAL] NekRS default OCCA mode;
# CPU, CUDA, HIP, OPENCL or OPENMP
export NEKRS_OCCA_MODE_DEFAULT=CUDA

# For other options, see Cardinal's Makefile

# When building, remember to set:
export OCCA_CUDA_ENABLED=1
# OCCA_CUDA_ENABLED = 1, and/or
# OCCA_HIP_ENABLED = 1, and/or
# OCCA_OPENCL_ENABLED = 1 in the Makefile to set the correct threading API

# note, requires cmake 3.18 or higher
